{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2022-07-05T00:08:06.290351+00:00",
  "repo": "tfpauly/draft-ohai-svcb-config",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOG3oZ-85EYSFG",
      "title": "OHTTP targets need a path",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/2",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I may have missed it, but the current draft doesn't seem to provide a way for clients to discover the full oblivious target resource from a HTTPS record with the \"oblivious-configs\" parameter -- it only gives them the configuration structure. Similar to the DNS case, OHTTP targets are defined by their path, so I think it might make sense to mint a new parameter for the path, maybe \"oblivious-path\"? ",
      "createdAt": "2022-02-22T18:04:11Z",
      "updatedAt": "2022-02-28T22:00:48Z",
      "closedAt": "2022-02-28T22:00:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yeah, for the DNS case, they have dohpath, but I think we'd need a path here too for oblivious HTTP generically!",
          "createdAt": "2022-02-22T18:05:06Z",
          "updatedAt": "2022-02-22T18:05:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly would you like a PR?",
          "createdAt": "2022-02-23T00:54:59Z",
          "updatedAt": "2022-02-23T00:54:59Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Nah, I can add it soon.",
          "createdAt": "2022-02-23T00:55:34Z",
          "updatedAt": "2022-02-23T00:55:34Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOG3oZ-85EYTef",
      "title": "Mixed configuration structures for DNS",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/3",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft currently allows for the \"configs\" parameter to carry an `ObliviousDoHConfigs` structure instead of a `KeyConfig`. `ObliviousDoHConfigs` looks like so:\r\n\r\n~~~\r\nstruct {\r\n   uint16 kem_id;\r\n   uint16 kdf_id;\r\n   uint16 aead_id;\r\n   opaque public_key<1..2^16-1>;\r\n} ObliviousDoHConfigContents;\r\n\r\nstruct {\r\n   uint16 version;\r\n   uint16 length;\r\n   select (ObliviousDoHConfig.version) {\r\n      case 0x0001: ObliviousDoHConfigContents contents;\r\n   }\r\n} ObliviousDoHConfig;\r\n\r\nObliviousDoHConfig ObliviousDoHConfigs<1..2^16-1>;\r\n~~~\r\n\r\nAnd `KeyConfig`:\r\n\r\n~~~\r\nstruct {\r\n  uint8 key_id;\r\n  HpkeKemId kem_id;\r\n  HpkePublicKey public_key;\r\n  HpkeSymmetricAlgorithms cipher_suites<4..2^16-4>;\r\n} KeyConfig;\r\n~~~\r\n\r\nI've not actually worked it out, but I wonder if these structures are defined such that clients can always distinguish between the two. If clients get confused, they might try to engage the OHTTP encapsulation logic instead of ODoH logic (or vice versa), and I don't think we have a good understanding of what can happen as a result.\r\n\r\nAbsent this analysis, I would drop the ability for configs to carry either one of these structures, and unify around `KeyConfig`. ",
      "createdAt": "2022-02-22T18:10:36Z",
      "updatedAt": "2022-02-28T22:00:48Z",
      "closedAt": "2022-02-28T22:00:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I don't think it's possible for a config to parse validly for both \u2014 we can add the analysis.",
          "createdAt": "2022-02-22T20:12:04Z",
          "updatedAt": "2022-02-22T20:12:04Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Having this ambiguous definition doesn't seem particularly helpful. Why not just pick the simpler thing here?",
          "createdAt": "2022-02-22T20:13:40Z",
          "updatedAt": "2022-02-22T20:13:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The simpler thing being defining two separate keys?",
          "createdAt": "2022-02-22T20:15:16Z",
          "updatedAt": "2022-02-22T20:15:16Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "There's probably at least three options:\r\n\r\n1. Use separate keys for each config type\r\n1. Use `KeyConfig` for OHTTP and `ObliviousDoHConfigs` for ODoH\r\n1. Use `KeyConfig` for OHTTP and ODoH\r\n\r\nI would go with option (3), but (1) and (2) seem reasonable?",
          "createdAt": "2022-02-22T20:18:23Z",
          "updatedAt": "2022-02-22T20:18:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think the choice is more like:\r\n1. Use one SVCB parameter for `KeyConfig`, which covers OHTTP generic and ODoH \"v2\", and another SVCB parameter for `ObliviousDoHConfigs` for ODoH \"v1\"\r\n2. Use the same SVCB parameter for both versions of ODoH, so that DNS resolver software doesn't have to care about the two",
          "createdAt": "2022-02-22T20:25:19Z",
          "updatedAt": "2022-02-22T20:25:19Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "That's a better framing, and between the two, I would go with (1). \ud83e\udd37 ",
          "createdAt": "2022-02-22T21:05:50Z",
          "updatedAt": "2022-02-22T21:05:50Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly would you like a PR?",
          "createdAt": "2022-02-23T00:54:50Z",
          "updatedAt": "2022-02-23T00:54:50Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "No, I'll do a restructure.",
          "createdAt": "2022-02-23T00:57:50Z",
          "updatedAt": "2022-02-23T00:57:50Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOG3oZ-85EYT9Z",
      "title": "Key consistency",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/4",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The security considerations section lists several ways in which clients could try to ensure they have a consistent view of the oblivious target's public key. Shamelessly, I would instead cite [this document](https://chris-wood.github.io/key-consistency/draft-wood-key-consistency.html), as that's what OHTTP is doing now. (We're going to SECDISPATCH this to see what becomes of it.)",
      "createdAt": "2022-02-22T18:12:49Z",
      "updatedAt": "2022-02-22T21:02:56Z",
      "closedAt": "2022-02-22T21:02:56Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, that's a good citation to make",
          "createdAt": "2022-02-22T20:12:22Z",
          "updatedAt": "2022-02-22T20:12:22Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOG3oZ-85EYXWj",
      "title": "ODoH target verification",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/5",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The draft seems to prohibit DDR verification for ODoH targets:\r\n\r\n> In the case of oblivious DNS servers, the client cannot direclty use the verification mechanisms described in {{DDR}}, which rely on checking for known resovler IP addresses or hostnames in TLS certificates, since clients do not directly perfom TLS with oblivious targets.\r\n\r\nIt's true that the normal flow of ODoH doesn't require the client to check with the oblivious target, but the client _could_ do this before sending queries to the target. Whether that is a privacy problem depends on the threat model, I think. For example, if there's only one client that discovers and validates this oblivious target, then applying the DDR check would basically break the ODoH guarantee that the target can't link queries to clients. But that's not necessarily true if there are many clients. \r\n\r\nI'd relax this text and allow either verification mechanism, noting the possible problem that might arise if there's not a sufficient number of clients using the target. ",
      "createdAt": "2022-02-22T18:29:18Z",
      "updatedAt": "2022-02-22T21:14:33Z",
      "closedAt": "2022-02-22T21:14:33Z",
      "comments": []
    },
    {
      "number": 11,
      "id": "I_kwDOG3oZ-85FRk-H",
      "title": "DNSSEC doesn't provide consistency",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/11",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> One mitigation specific to this mechanism is validating that SVCB or HTTPS records including the \"oblivious-configs\" are protected by [DNSSEC](https://www.ietf.org/archive/id/draft-pauly-ohai-svcb-config-00.html#DNSSEC) [DNSSEC]. This prevents attacks where a unique response is generated for each client of a resolver.\r\n\r\n-- https://www.ietf.org/archive/id/draft-pauly-ohai-svcb-config-00.html#section-5-3\r\n\r\nThis isn't true as DNSSEC responses can be customized on a per-client basis (worse if EDNS(0) client subnet is in use).  What might be a more realistic protection here is caching at a resolver, which might prevent that sort of customization.  Of course, if this is for DNS resolution - as it is - that doesn't necessarily help that much.",
      "createdAt": "2022-03-08T05:25:46Z",
      "updatedAt": "2022-03-08T05:31:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Fair enough \u2014 we can remove this comment.",
          "createdAt": "2022-03-08T05:31:44Z",
          "updatedAt": "2022-03-08T05:31:44Z"
        }
      ]
    },
    {
      "number": 12,
      "id": "I_kwDOG3oZ-85FRlTs",
      "title": "What does ohttp-path identify?",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/12",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Is it the oblivious request resource or the oblivious proxy resource.  Clients need the latter, but it doesn't seem like you have allowed for an absolute URI as this is a \"path\" and not a URI and [this](https://www.ietf.org/archive/id/draft-pauly-ohai-svcb-config-00.html#section-3-4) says:\r\n\r\n> If this path parameter is not present, oblivious requests can be made to the root \"/\" path.\r\n\r\n... on which server?",
      "createdAt": "2022-03-08T05:28:22Z",
      "updatedAt": "2022-05-27T04:34:08Z",
      "closedAt": "2022-05-27T04:34:08Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is meant to be the path on the target server, not the proxy. The client would need to work with the proxy to know how the target maps to a request.\r\n\r\nThe entity publishing the target config only knows about the target name and path, not the proxy info. Knowing how a proxy does mappings is out of scope here, I think.",
          "createdAt": "2022-03-08T05:33:38Z",
          "updatedAt": "2022-03-08T05:33:38Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "FYI @chris-wood , since you had asked for the path parameter to be added.",
          "createdAt": "2022-03-08T05:35:16Z",
          "updatedAt": "2022-03-08T05:35:16Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "NONE",
          "body": "New version out, this appears OBE.",
          "createdAt": "2022-05-27T04:34:08Z",
          "updatedAt": "2022-05-27T04:34:08Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOG3oZ-85FRlao",
      "title": "A client has to trust the oblivious proxy resource",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/13",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "If it gets this via a discovery process, how does it know that it can trust that resource?",
      "createdAt": "2022-03-08T05:29:05Z",
      "updatedAt": "2022-03-15T20:51:05Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "In this model, the client isn't discovering the proxy \u2014 it's discovering the target, and has a proxy that it trusts already. Proxy discovery would be a separate mechanism.",
          "createdAt": "2022-03-08T05:34:39Z",
          "updatedAt": "2022-03-08T05:34:39Z"
        },
        {
          "author": "martinthomson",
          "authorAssociation": "NONE",
          "body": "I see.  That wasn't at all clear.  OHTTP doesn't really let you choose a target at the proxy though, so how would you propose that the client discover the oblivious proxy resource?",
          "createdAt": "2022-03-09T04:08:08Z",
          "updatedAt": "2022-03-09T04:08:08Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The client would be using a proxy it already knows about or knows can handle this target.",
          "createdAt": "2022-03-15T20:51:05Z",
          "updatedAt": "2022-03-15T20:51:05Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "I_kwDOG3oZ-85KhsXL",
      "title": "Needs more details for OHTTP",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/16",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "The current document is a little light on detail, probably a little *too* light.\r\n\r\nFirstly, it needs to be directly acknowledged that the assertion being made here is that ALL resources on an HTTP server are accessible using OHTTP.  That is all the HTTPS record is able to assert.  See also, the closed #12, which talked about `ohttp-path`.  This is fine, as OHTTP doesn't really care what you put inside the encrypted message to the oblivious request resource, so an origin-wide assertion works fine as long as your intermediaries (proxy and request resources) are OK with it.\r\n\r\nWhat you then need in order to make a request is a) an oblivious proxy resource, and b) an oblivious request resource.  The draft acknowledges the need for the first and says that you bring your own.  What it doesn't say is how to get the latter.  \r\n\r\nAs OHTTP depends on these being independent entities, it isn't at all clear that the choice of oblivious request resource follows from your choice of oblivious proxy resource OR the choice of oblivious target resource.\r\n\r\nIt's possible that clients will have separate arrangements with entities that operate both proxy and request resources, entities that are independent of this target.  That's probably the ideal situation.\r\n\r\nAs we've discussed though, it makes a fair bit of sense to co-locate the request resource with the target.  For that, you need to know which resource on the server serves that function.  A .well-known for that is a possibility, though I might prefer not to overuse .well-known and might instead suggest that you would provide a path to the request resource in configuration.  There is no harm in allowing configuration for that resource.",
      "createdAt": "2022-05-27T05:09:17Z",
      "updatedAt": "2022-05-27T10:54:28Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think there's some confusion in terminology going on here. As I understand the situation, the path parameter (which still seems necessary) discussed in #12 was for the oblivious request resource, not the oblivious target resource. It's unfortunate that the request resource is referred to as the target in ODoH, which seems to contribute to the confusion.\r\n\r\nIn any case, maybe adding the path to the .well-known endpoint that vends out keys is a reasonable way forward. @bemasc rightfully points out that these need to be treated atomically anyway from a consistency perspective. Then there'd be one simple way to fetch a configuration.",
          "createdAt": "2022-05-27T10:54:28Z",
          "updatedAt": "2022-05-27T10:54:28Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOG3oZ-85Khtfw",
      "title": ".well-known is a poor fit for key configuration",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/17",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "The document talks about discovering *targets*, or oblivious target resources. It also specifies a location for a key configuration.\r\n\r\nThe key configuration is a property of the oblivious ***request*** resource.  As the configuration provides information about oblivious target resources, this is not a good fit.\r\n\r\nAlso, as a single oblivious request resource is able to serve a large number of target resources, I would instead suggest that a link relation - a more appropriate a method of providing any sort of configuration for a single resource - is also better suited to this application.\r\n\r\n`.well-known` provides information about entire servers.  Origin-wide configuration, where there might be multiple oblivious request resources on the same server, is inflexible.\r\n\r\nIf the goal is to facilitate discovery without specifying paths, then putting the path of the oblivious request resource into the SVCB (HTTPS really) configuration might work.  Or, if you don't like your configuration too explicit, a well-known location for an oblivious request resource that is able to forward oblivious requests to any oblivious target resource on the same origin might also work.",
      "createdAt": "2022-05-27T05:17:32Z",
      "updatedAt": "2022-07-04T22:17:07Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "As terminology has improved, the document now is clear that this is about identifying an oblivious gateway resource and its configuration.\r\n\r\nI don't think a link relation, directly, would make sense for this discovery mode (since you'd need to get the relation from some original request with a link header), but there may be a good analogy we can create in the SVCB parameters -- adding more info to let the gateway be separate from the target, and being explicit about that.",
          "createdAt": "2022-07-04T20:57:24Z",
          "updatedAt": "2022-07-04T20:57:24Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@martinthomson I'd be curious to hear your thoughts on the direction we could take with #21.",
          "createdAt": "2022-07-04T22:17:06Z",
          "updatedAt": "2022-07-04T22:17:06Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOG3oZ-85Khu9V",
      "title": "Hiding IP when getting key configuration",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/18",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> When clients fetch a target's configuration using the well-known URI, they can expose their identity in the form of an IP addres if they do not connect via a proxy or some other IP-hiding mechanism. Clients SHOULD use a proxy or similar mechanism to avoid exposing client IPs to a target.\r\n\r\nFetching key configuration does not necessarily reveal sensitive information other than that the client is interested in the answer.  It is worth pointing out that clients that wish to hide any interest in the resources provided by the server might want to break any tie between their IP address and this interest, but there are lots of cases where that is not necessary.\r\n\r\nFor instance, we might not find it useful to try to hide the fact that Firefox is running on a particular computer.  If Firefox requests oblivious key configuration information from our chosen DNS provider, all that we reveal is that Firefox is running, something we will reveal soon afterwards by virtue of establishing TLS connections to a bunch of servers.  So there is little value in us protecting this information.\r\n\r\nIt might be better to frame this in a more nuanced fashion.  Talk instead about the consequences of leaking information about interest in the services being offered and how that is tied to network identity unless protective measures are taken (proxy, MASQUE, VPN, Tor, etc...)  A \"SHOULD\" is not appropriate, depending on circumstances.",
      "createdAt": "2022-05-27T05:27:31Z",
      "updatedAt": "2022-05-31T07:50:16Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "In a typical DNR/DDR use case, the oblivious target will be deployed by the network-provider and it not only knows the client IP address but also the client identity. If the client fetches the key configuration from the oblivious target directly, it would know the client identity interested to use the oblivious target. Most importantly, if the client directly fetches the key configuration from the oblivious target, it is easily susceptible to targeted key configuration attack.\r\n\r\n",
          "createdAt": "2022-05-31T07:50:16Z",
          "updatedAt": "2022-05-31T07:50:16Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "I_kwDOG3oZ-85Khyd8",
      "title": "Encrypted DNS isn't sufficient",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/issues/19",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "> Attackers on a network can remove SVCB information from cleartext DNS answers [...] Use of encrypted DNS or DNSSEC also can be used as mitigations.\r\n\r\nThese two things are very different.  DNSSEC provides integrity and so - if it is used - is effective.  Of course, it is pretty hard to *get* DNSSEC responses at a stub resolver reliably, but that doesn't mean you can't recommend it.\r\n\r\nEncrypted DNS (DoH, DoT, etc...) helps differently.  It means that you are no longer exposed to network-based attackers.  But that assumes three things if you don't have DNSSEC:\r\n\r\n1. you are able to get (authenticated and) encrypted DNS to the recursive resolver\r\n2. your recursive resolver doesn't strip SVCB (or the oblivious flag; or the entire mandatory=oblivious RRs) from responses\r\n3. you are able to get (authenticated and) encrypted DNS between the recursive and the authoritative.\r\n\r\nYou can drop the last if your recursive does DNSSEC validation for you, which means you are relying on having encrypted DNS *and* DNSSEC.",
      "createdAt": "2022-05-27T05:53:39Z",
      "updatedAt": "2022-05-27T07:10:33Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "body": "Good points. If the client does not support DNSSEC, it has to have a authenticated encrypted connection to the recursive resolver and the resolver has to do DNSSEC validation (signaling to the client that it has done DNSSEC validation using AD bit). \r\n\r\nAs per https://datatracker.ietf.org/doc/html/rfc5625#section-4.3, resolvers must handle Resource Records (RRs) of unknown type transparently. Resolvers shouldn't be modifying the SVCB RR type. \r\n",
          "createdAt": "2022-05-27T07:10:33Z",
          "updatedAt": "2022-05-27T07:10:33Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOG3oZ-84zTR3S",
      "title": "\"oblivious-keys\" to \"oblivious-configs\"",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/1",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T18:02:37Z",
      "updatedAt": "2022-02-22T18:08:13Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "5542c9c21e65243cc090cb6d2b01fecc2fe70e94",
      "headRepository": "chris-wood/draft-ohai-svcb-config",
      "headRefName": "caw/keys-to-configs",
      "headRefOid": "6449af638b4b4ee7253772415482e5efe374877d",
      "closedAt": "2022-02-22T18:08:13Z",
      "mergedAt": "2022-02-22T18:08:13Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5e6c43165d4d1d4453eb1ed9540799191078095b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-841DwrW",
          "commit": {
            "abbreviatedOid": "690fe72"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-22T18:07:07Z",
          "updatedAt": "2022-02-22T18:07:07Z",
          "comments": [
            {
              "originalPosition": 117,
              "body": "```suggestion\r\n| TBD     | oblivious-configs | Oblivious HTTP key configurations         | (This document) |\r\n```",
              "createdAt": "2022-02-22T18:07:07Z",
              "updatedAt": "2022-02-22T18:07:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-841Dwvi",
          "commit": {
            "abbreviatedOid": "690fe72"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-22T18:07:21Z",
          "updatedAt": "2022-02-22T18:07:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "PR_kwDOG3oZ-84zTXDN",
      "title": "Fix some typos",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/6",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-22T18:31:03Z",
      "updatedAt": "2022-02-22T20:11:08Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "5e6c43165d4d1d4453eb1ed9540799191078095b",
      "headRepository": "chris-wood/draft-ohai-svcb-config",
      "headRefName": "patch-1",
      "headRefOid": "e2c4898c97d0650ddf4db8143a0e5367c8330306",
      "closedAt": "2022-02-22T20:11:08Z",
      "mergedAt": "2022-02-22T20:11:08Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e802f704574c8e9fbe67552194ec1d8105c6ae73"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-841EQgB",
          "commit": {
            "abbreviatedOid": "e2c4898"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-22T20:11:04Z",
          "updatedAt": "2022-02-22T20:11:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOG3oZ-84zTr2F",
      "title": "Reference key consistency",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/7",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #4",
      "createdAt": "2022-02-22T20:30:30Z",
      "updatedAt": "2022-02-22T21:02:56Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "e802f704574c8e9fbe67552194ec1d8105c6ae73",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "tfpauly-patch-1",
      "headRefOid": "0308f5f93a92e6ba0e659268f005c8cc159084c1",
      "closedAt": "2022-02-22T21:02:56Z",
      "mergedAt": "2022-02-22T21:02:56Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "68cddaccd9b6a6a26c9fcad995d90f638305bb0b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 8,
      "id": "PR_kwDOG3oZ-84zTxlT",
      "title": "Explain direct verification of ODoH target",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/8",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes #5",
      "createdAt": "2022-02-22T21:05:30Z",
      "updatedAt": "2022-02-22T21:14:33Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "68cddaccd9b6a6a26c9fcad995d90f638305bb0b",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "75719c8390b2e5eeddad0148b1187884a0fef56b",
      "closedAt": "2022-02-22T21:14:33Z",
      "mergedAt": "2022-02-22T21:14:33Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "96282c4027d06af7ec27e1db1033eec512ad28b2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-841EdoR",
          "commit": {
            "abbreviatedOid": "75719c8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-22T21:06:28Z",
          "updatedAt": "2022-02-22T21:06:28Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOG3oZ-84zsJJx",
      "title": "Add explicit keys for OHTTP-Path and ODoH-Configs",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/9",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes #2 \r\nCloses #3 ",
      "createdAt": "2022-02-28T21:36:32Z",
      "updatedAt": "2022-02-28T22:00:48Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "96282c4027d06af7ec27e1db1033eec512ad28b2",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "1f24def588254ccd4daf46afd66a8b87f536c412",
      "closedAt": "2022-02-28T22:00:48Z",
      "mergedAt": "2022-02-28T22:00:48Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "34a491133562f358093f5355ecf575b2f389a7a4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-841YhT6",
          "commit": {
            "abbreviatedOid": "1f24def"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-28T21:37:57Z",
          "updatedAt": "2022-02-28T21:37:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOG3oZ-84z_L6A",
      "title": "Co-author draft",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/10",
      "state": "MERGED",
      "author": "tireddy2",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-05T07:43:03Z",
      "updatedAt": "2022-03-05T15:02:03Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "2373fe260b8efa09ef46c3942581fc4312012b09",
      "headRepository": "tireddy2/draft-ohai-svcb-config",
      "headRefName": "main",
      "headRefOid": "47ba8bfff47319d12d7335e3f469ff2dfe4b74d5",
      "closedAt": "2022-03-05T15:02:03Z",
      "mergedAt": "2022-03-05T15:02:03Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ae8469bf109b42f9c79367f5be1b9e1c0d39658e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOG3oZ-8435ji6",
      "title": "Rework of protocol based on IETF 113 feedback",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/14",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "The main change here is to change the SVCB parameter to a boolean, and have a well-known URI to fetch the config from the target server.",
      "createdAt": "2022-05-16T18:25:31Z",
      "updatedAt": "2022-05-25T15:08:34Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "c0e215f4c0c3feb119c6be6365af7e2332c5327c",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "tfp/rework",
      "headRefOid": "cdc8f301e6e334f608a609be658b9a7bac7a59ab",
      "closedAt": "2022-05-25T15:08:34Z",
      "mergedAt": "2022-05-25T15:08:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8cfed20962c81d7601d68b6958b6e825d0dced39"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-846H-aZ",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-17T09:45:15Z",
          "updatedAt": "2022-05-17T09:45:16Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "The proposed mechanism is susceptible to downgrade attack (not to use oblivious HTTP). I mean an attacker removing the oblivious SvcParamKey from the DNS response. Couple of possible ways to mitigate the attack could be (1) to perform the DNS SVCB query again after secure transport connection is established with the discovered DNS resolver (2) Rely on DNSSEC.",
              "createdAt": "2022-05-17T09:45:15Z",
              "updatedAt": "2022-05-17T11:45:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846IGPs",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-17T10:08:00Z",
          "updatedAt": "2022-05-17T10:12:16Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Rather than use the TargetName directly, should clients chase TargetNames down to a terminal node in the SVCB chain? For example, if _dns.resolver.arpa targets doh.example, and doh.example targets jk-this-doh.example, presumably the target the client should use is jk-this-doh.example, right?",
              "createdAt": "2022-05-17T10:08:00Z",
              "updatedAt": "2022-05-17T10:12:16Z"
            },
            {
              "originalPosition": 160,
              "body": "```suggestion\r\nClients that know a service is available as an oblivious target, e.g., \r\neither via discovery through the \"oblivious\" parameter in a SVCB or HTTPS\r\nrecord, or by configuration, need to know the key configuration before sending\r\noblivious requests.\r\n```\r\n\r\nSince the URI is separate from the discovery mechanism and could be used even for manually configured client/target arrangements.",
              "createdAt": "2022-05-17T10:10:33Z",
              "updatedAt": "2022-05-17T10:12:16Z"
            },
            {
              "originalPosition": 224,
              "body": "I might add some text here about how the SVCB parameter is just a hint, and clients _could_ choose to query every target for their oblivious configs if they wanted to. In that way, DNSSEC isn't required -- it's just an optimization.",
              "createdAt": "2022-05-17T10:12:13Z",
              "updatedAt": "2022-05-17T10:12:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846H-0T",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-17T09:46:26Z",
          "updatedAt": "2022-05-17T11:45:52Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "We may want to refer to the Security Considerations discussed in https://datatracker.ietf.org/doc/html/draft-ietf-add-svcb-dns-03#section-8.",
              "createdAt": "2022-05-17T09:46:26Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 210,
              "body": "We can refer to https://datatracker.ietf.org/doc/draft-schwartz-ohai-consistency-doublecheck/, it discusses key consistency double check procedure. ",
              "createdAt": "2022-05-17T10:01:55Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 205,
              "body": "Is it possible for the client to discover multiple key configurations using the well-known URI ?\r\n",
              "createdAt": "2022-05-17T10:05:12Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 219,
              "body": "We may want to consider discussing the client behavior if the oblivious target stops publishing the key config or publishes a unique key per client. ",
              "createdAt": "2022-05-17T10:18:25Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 148,
              "body": "The line does is no longer relevant. The client will anyway have to connect to the oblivious target to discover the key config.",
              "createdAt": "2022-05-17T11:13:11Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 208,
              "body": "Directly connecting to the oblivious target will expose the client IP address to the oblivious target, we may want to discuss the privacy implications.",
              "createdAt": "2022-05-17T11:15:14Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 20,
              "body": "We may want to elaborate on the deployment model assumed by this draft for DDR and DNR. For example, (1) the DNS server needs to have public access for the oblivious proxy to access it (2) client has an prior agreement with the oblivious proxy that the name and path of the oblivous target is encoded using a particular proxy URI template.",
              "createdAt": "2022-05-17T11:34:06Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            },
            {
              "originalPosition": 63,
              "body": "I am not sure why a target would only support oblivious HTTP for DNR/DDR use cases, please elaborate.",
              "createdAt": "2022-05-17T11:36:38Z",
              "updatedAt": "2022-05-17T11:45:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846Kl8G",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-17T17:32:08Z",
          "updatedAt": "2022-05-17T17:32:08Z",
          "comments": [
            {
              "originalPosition": 205,
              "body": "Yes \u2014\u00a0the struct for `application/ohttp-keys` can contain multiple key configs",
              "createdAt": "2022-05-17T17:32:08Z",
              "updatedAt": "2022-05-17T17:32:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846KmM-",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-17T17:33:07Z",
          "updatedAt": "2022-05-17T17:33:07Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "It could have multiple services listed \u2014\u00a0one generic DoH for DDR, and an entirely different record for their ODoH server.",
              "createdAt": "2022-05-17T17:33:07Z",
              "updatedAt": "2022-05-17T17:33:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846NCCW",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-18T07:42:11Z",
          "updatedAt": "2022-05-18T07:42:12Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "It would be helpful to mention the above explanation in the DDR section. ",
              "createdAt": "2022-05-18T07:42:12Z",
              "updatedAt": "2022-05-18T07:42:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jXAd",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:08:42Z",
          "updatedAt": "2022-05-23T21:08:42Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "No, it is still relevant \u2014 it may not direct connect to the IP address, it can go through a proxy.",
              "createdAt": "2022-05-23T21:08:42Z",
              "updatedAt": "2022-05-23T21:08:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jZpM",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:21:57Z",
          "updatedAt": "2022-05-23T21:21:57Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "Added text in the security considerations section!",
              "createdAt": "2022-05-23T21:21:57Z",
              "updatedAt": "2022-05-23T21:21:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jZ-q",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:23:48Z",
          "updatedAt": "2022-05-23T21:23:48Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Clarified that this should be off of the ServiceMode.",
              "createdAt": "2022-05-23T21:23:48Z",
              "updatedAt": "2022-05-23T21:23:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jaUE",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:24:43Z",
          "updatedAt": "2022-05-23T21:24:44Z",
          "comments": [
            {
              "originalPosition": 224,
              "body": "Added text about being a hint earlier in the security section.",
              "createdAt": "2022-05-23T21:24:43Z",
              "updatedAt": "2022-05-23T21:24:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jaap",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:24:54Z",
          "updatedAt": "2022-05-23T21:24:55Z",
          "comments": [
            {
              "originalPosition": 214,
              "body": "Added a reference!",
              "createdAt": "2022-05-23T21:24:54Z",
              "updatedAt": "2022-05-23T21:24:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846ja8I",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:25:58Z",
          "updatedAt": "2022-05-23T21:25:58Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "I'd rather not refer to that right now, since that's relying on configuration fetching that we don't have consensus on yet.",
              "createdAt": "2022-05-23T21:25:58Z",
              "updatedAt": "2022-05-23T21:25:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jbCU",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:26:28Z",
          "updatedAt": "2022-05-23T21:26:28Z",
          "comments": [
            {
              "originalPosition": 208,
              "body": "I added more text about that in security considerations.",
              "createdAt": "2022-05-23T21:26:28Z",
              "updatedAt": "2022-05-23T21:26:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jbHy",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:26:54Z",
          "updatedAt": "2022-05-23T21:26:54Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Added text in this section where we define the oblivious parameter.",
              "createdAt": "2022-05-23T21:26:54Z",
              "updatedAt": "2022-05-23T21:26:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jbQT",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:27:38Z",
          "updatedAt": "2022-05-23T21:27:38Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Added text at the start of the oblivious DNS section for this!",
              "createdAt": "2022-05-23T21:27:38Z",
              "updatedAt": "2022-05-23T21:27:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846jbX3",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-23T21:28:15Z",
          "updatedAt": "2022-05-23T21:28:16Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Hm, I'm not sure exactly what to say at this point for that.",
              "createdAt": "2022-05-23T21:28:15Z",
              "updatedAt": "2022-05-23T21:28:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846kTLP",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T05:00:44Z",
          "updatedAt": "2022-05-24T05:00:44Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Fair point, we can revisit it later.",
              "createdAt": "2022-05-24T05:00:44Z",
              "updatedAt": "2022-05-24T05:00:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846kYA_",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T05:33:46Z",
          "updatedAt": "2022-05-24T05:33:47Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "If the oblivious target stops publishing the key config or publishes a unique key per client, the client must not use the discovered oblivious DNS server and will fallback to use the pre-configured oblivious DNS server. ",
              "createdAt": "2022-05-24T05:33:47Z",
              "updatedAt": "2022-05-24T05:33:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846kcTX",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T05:59:58Z",
          "updatedAt": "2022-05-24T05:59:58Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "If the client uses a proxy (e.g., HTTP CONNECT), it can still validate the TLS server certificate of the oblivious DNS server. I prefer the client validating the target certificate itself rather than relying on the oblivious proxy to do the validation on its behalf. ",
              "createdAt": "2022-05-24T05:59:58Z",
              "updatedAt": "2022-05-24T05:59:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846kiJc",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tireddy2",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T06:28:32Z",
          "updatedAt": "2022-05-24T06:28:32Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Thanks.",
              "createdAt": "2022-05-24T06:28:32Z",
              "updatedAt": "2022-05-24T06:28:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846nvM0",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T15:59:22Z",
          "updatedAt": "2022-05-24T15:59:23Z",
          "comments": [
            {
              "originalPosition": 219,
              "body": "Added a sentence here about not using servers that do key targeting.",
              "createdAt": "2022-05-24T15:59:23Z",
              "updatedAt": "2022-05-24T15:59:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOG3oZ-846nvVO",
          "commit": {
            "abbreviatedOid": "22522ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T15:59:43Z",
          "updatedAt": "2022-05-24T15:59:43Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "Ah, I see. I've re-written this paragraph to just say to do the normal TLS cert check!",
              "createdAt": "2022-05-24T15:59:43Z",
              "updatedAt": "2022-05-24T15:59:43Z"
            }
          ]
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOG3oZ-844j2Y1",
      "title": "Editorial fixes",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/15",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-05-27T04:31:56Z",
      "updatedAt": "2022-07-04T23:57:13Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "8cfed20962c81d7601d68b6958b6e825d0dced39",
      "headRepository": "martinthomson/ohai-svcb-config",
      "headRefName": "editorial",
      "headRefOid": "866d1db2bec453a607718dd7a375a508986c3350",
      "closedAt": "2022-07-04T20:30:12Z",
      "mergedAt": "2022-07-04T20:30:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "584cca423db3a2809182a93f1f399c31a6a83a5c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOG3oZ-849RE7G",
          "commit": {
            "abbreviatedOid": "866d1db"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-04T20:30:08Z",
          "updatedAt": "2022-07-04T20:30:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOG3oZ-8460YOw",
      "title": "Soften language about IP obfuscation",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/20",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes #18 ",
      "createdAt": "2022-07-04T20:47:46Z",
      "updatedAt": "2022-07-04T20:51:00Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "893f521abea929ba6a16dc8fdae30d7391de168a",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "tfpauly-patch-4",
      "headRefOid": "e2bedc377be475ef5c308bb942d1cc942ed4b268",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOG3oZ-8460hUO",
      "title": "Make SVCB parameter \"oblivious-gateway\"",
      "url": "https://github.com/tfpauly/draft-ohai-svcb-config/pull/21",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #16\r\nCloses #17\r\n\r\nThis is a reconstruction of the discovery that changes from a boolean, to a name of the oblivious gateway.\r\n\r\nThe theory here is that if you're looking up records for a target you're trying to talk to, and looking up HTTPS records (for normal HTTP resources) or SVCB records (for DoH servers), you can get a parameter back indicating that there's an oblivious gateway that is designed specifically to work with this target. This parameter contains the name of the oblivious gateway server.\r\n\r\nOf course, the oblivious gateway _can_ be co-located with the target resource, but they don't need to be. This was a bug in the previous approach to not allow them to be different.\r\n\r\nOnce you know this, you still need to know (a) the configuration to use on the client to create the request and (b) the oblivious gateway resource's full URI / path.\r\n\r\nThe current text uses a well-known for both. I know we don't want to overuse well-known, so we may certainly want to back away from this. However, this does simplify things greatly for client-targeting attacks by making the gateway commit to having one discoverable gateway resource and associated key config set.\r\n\r\nAnother approach would be for the parameter in the SVCB record to include the name and the path (the full URI, essentially) of the gateway resource. The trick then would be to have a deterministic way to look up the key config based on that. It also makes it easier to spin up a unique gateway resource per-client, so you need more targeting mitigation.",
      "createdAt": "2022-07-04T22:16:35Z",
      "updatedAt": "2022-07-04T22:16:35Z",
      "baseRepository": "tfpauly/draft-ohai-svcb-config",
      "baseRefName": "main",
      "baseRefOid": "893f521abea929ba6a16dc8fdae30d7391de168a",
      "headRepository": "tfpauly/draft-ohai-svcb-config",
      "headRefName": "gateway-param",
      "headRefOid": "dde7103131484bbd4ef9725c738d7aa528a81774",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}